

provide:
   mac1
   checker


mac1{f} = 
   #macro with {context, scope, form, #data{expr}} ->
      f{expr}

__chk_ncache = {=}
__chk_scache = {=}

checker{match} =
   null? -> checker.null
   undefined? -> checker.undefined
   ==true -> checker.true
   ==false -> checker.false
   Number? n ->
      if [__chk_ncache[n]]:
         then: __chk_ncache[n]
         else:
            v = mac1{{x} -> '[^x == ^=n]}
            __chk_ncache[n] := v
            v
   String? s ->
      if [__chk_scache[s]]:
         then: __chk_scache[s]
         else:
            v = mac1{{x} -> '[^x == ^=s]}
            __chk_scache[s] := v
            v

checker &: {
   String = mac1 with {x} -> '[typeof{^x} == "string"]
   Number = mac1 with {x} -> '[typeof{^x} == "number"]
   Array = mac1 with {x} -> '[^x instanceof Array]
   true = mac1 with {x} -> x
   false = mac1 with {x} -> '[not x]
   null = mac1{{x} -> '[^x == ^=null]}
   undefined = mac1{{x} -> '[^x == ^=undefined]}
}
