
'use strict';require('earlgrey-runtime/6');let accum$2;let accum$3;let accum$4;let accum$5;let $targ$16;let $targ$17;let $targ$18;let $targ$19;let $targ$20;let $targ$21;let $targ$22;let $targ$23;let $targ$24;let $0$0;let Source$0;let Location$0;let highlight_locations$0;let __lt____lt____colon__$0;let $1$0;let tokenize$0;let $2$0;let parse$0;let $3$0;let Translator$0;let std$0;let exp$0;let opt$0;let $7$0;let Body$0;let GenSym$0;let vm$0;let module$0;let path$0;let to5$0;let smap$0;let SourceNode$0;let $10$0;let transfer$0;let version$0;let evaluator$0;let Pipeline$0;let generate$0;let collapse$0;let makeAnnotatedAST$0;let toCodeAndSourceMap$0;let Generator$0;$0$0=require("./location");Source$0=$0$0.Source;Location$0=$0$0.Location;highlight_locations$0=$0$0.highlight_locations;__lt____lt____colon__$0=$0$0["<<:"];$1$0=require("./lex");tokenize$0=$1$0.tokenize;$2$0=require("./parse");parse$0=$2$0.parse;$3$0=require("./translate-js");Translator$0=$3$0.Translator;std$0=require("./stdenv");exp$0=require("./expand");opt$0=require("./opt");$7$0=require("./util");Body$0=$7$0.Body;GenSym$0=$7$0.GenSym;vm$0=require("vm");module$0=require("module");path$0=require("path");to5$0=require("6to5");smap$0=require("source-map");SourceNode$0=smap$0.SourceNode;$10$0=require("multi-stage-sourcemap");transfer$0=$10$0.transfer;version$0="zero";evaluator$0=(function evaluator(options$0){let g$0;let m$1$0;let t0$0;let $targ$0;let $get$0$0;let g$1;let m$0$0;let accum$0;let paths$0;let e_module$0;let e_require$0;let setup$0;let __eval$0;let req$0;let glob$0;req$0=require;if(options$0.globvar){m$0$0=send(global,options$0.globvar);if((m$0$0===(void 0))){m$1$0=options$0.global;if((m$1$0===true)){$targ$0=global;}else{if(getChecker(Object)(m$1$0)){g$0=m$1$0;$targ$0=g$0;}else{$targ$0=Object.create(global);}}t0$0=$targ$0;(global[options$0.globvar]=t0$0);$get$0$0=t0$0;glob$0=$get$0$0;}else{g$1=m$0$0;glob$0=g$1;}}else{glob$0=global;}if(module$0._nodeModulePaths){paths$0=module$0._nodeModulePaths(options$0.cwd);e_module$0=(new module$0(options$0.showname));__amp____colon__(e_module$0,({"filename":options$0.filename,"paths":paths$0}));e_require$0=(function e_require(path$1){return module$0._load(path$1,e_module$0,true);});__amp____colon__(e_require$0,__amp____colon__(({"main":e_module$0}),__amp____colon__(((accum$0=({})),(accum$0["resolve"]=(function resolve(path$2){return module$0._resolveFileName(path$2,e_module$0);})),accum$0),({"paths":paths$0,"cache":req$0.cache}))));setup$0=({"__filename":options$0.filename,"__dirname":path$0.dirname(options$0.filename),"module":e_module$0,"require":e_require$0,"exports":({})});return (function(code$0){let script$0;let rval$0;__amp____colon__(glob$0,setup$0);script$0=vm$0.createScript(code$0,options$0.showname);rval$0=script$0.runInThisContext();return rval$0;});}else{__eval$0=eval;return (function(code$1){return __eval$0(code$1);});}});Pipeline$0=(function Pipeline(){let $targ$1;let $targ$2;let $targ$3;let $it$0;if((!getChecker(Pipeline$0)(this))){$it$0=Object.create(Pipeline$0.prototype);}else{$it$0=this;}$targ$1=GenSym$0("_$$_");($it$0["gensym"]=$targ$1);[];$targ$2=std$0.make_expander($it$0);($it$0["_expander"]=$targ$2);[];$targ$3=$it$0._expander.mkenv();($it$0["env"]=$targ$3);[];return $it$0;});(Pipeline$0.prototype["parse"]=(function parse(source$0){let t$0;let $it$1;let self$0;$it$1=this;self$0=this;t$0=tokenize$0(source$0);return parse$0(t$0);}));(Pipeline$0.prototype["expand"]=(function expand(ast$0){let $it$2;let self$1;$it$2=this;self$1=this;return $it$2._expander.expand(["top"],exp$0.topscope,$it$2.env.mark(ast$0));}));(Pipeline$0.prototype["translate"]=(function translate(ast$1){let t0$1;let $targ$4;let accum$1;let r$0;let res$0;let globvar$0;let tr$0;let rval$1;let prep$0;let $it$3;let self$2;$it$3=this;self$2=this;res$0=opt$0.hoist(ast$1);globvar$0=$it$3.gensym("global");tr$0=Translator$0(null,globvar$0);rval$1=collapse$0(tr$0.translate(res$0,"expr"));prep$0=tr$0.dump_store();r$0=(((prep$0+";(")+rval$1)+")");return __amp____colon__((($targ$4=to5$0.transform(r$0)),(accum$1=({})),(t0$1=$targ$4),(___hasprop(t0$1,"code")?((accum$1["code"]=t0$1.code),accum$1):___match_error($targ$4))),({"globvar":globvar$0,"global":null,"location":ast$1.location}));}));(Pipeline$0.prototype["evaluate"]=(function evaluate(src$0){let ev$0;let loc$0;let $it$4;let self$3;$it$4=this;self$3=this;loc$0=(src$0.location||({"source":({"url":"<eval>"})}));ev$0=evaluator$0(({"globvar":src$0.globvar,"global":src$0.global,"filename":loc$0.source.url,"showname":loc$0.source.url,"cwd":loc$0.source.url}));return ev$0(src$0.code);}));(Pipeline$0.prototype["go"]=(function go(x$0,temp$0$0,end$0){let t0$2;let start$0;let ph$0$0;let $it$5;let self$4;$it$5=this;self$4=this;t0$2=temp$0$0;start$0=t0$2;ph$0$0=t0$2;if(((start$0===end$0)||(start$0==="eval"))){return x$0;}else{if((ph$0$0==="source")){return $it$5.go($it$5.parse(x$0),"parse",end$0);}else{if((ph$0$0==="parse")){return $it$5.go($it$5.expand(x$0),"expand",end$0);}else{if((ph$0$0==="expand")){return $it$5.go($it$5.translate(x$0),"translate",end$0);}else{if((ph$0$0==="translate")){return $it$5.go($it$5.evaluate(x$0),"eval",end$0);}else{throw ErrorFactory(["pipeline"]).create(("Unknown pipeline stage: "+start$0));}}}}}}));__amp____colon__(Pipeline$0,__amp____colon__(((accum$2=({})),(accum$2["::name"]="Pipeline"),accum$2),((accum$3=({})),(accum$3["::egclass"]=true),accum$3)));generate$0=(function generate(source$1){return Generator$0().generate(source$1);});collapse$0=(function collapse(temp$1$0){let t0$3;let acc$0;let parts$0;let t$1;let s$1;let tags$0;let props$0;let children$0;let $$424$0;let t0$4;let node$0;let ph$1$0;t0$3=temp$1$0;node$0=t0$3;ph$1$0=t0$3;t0$4=ph$1$0;if((getChecker(ENode)(t0$4)&&(___hasprop(t0$4,"tags")&&((tags$0=t0$4.tags),(___hasprop(t0$4,"props")&&((props$0=t0$4.props),___hasprop(t0$4,"children"))))))){children$0=t0$4.children;parts$0=[];acc$0=(function acc(ph$2$0){let m$2;let acc$1;let temp$2;let n$0;let xs$0$0;let s$0;let $$458$0;let t0$5;t0$5=ph$2$0;if((typeof(t0$5)==="string")){s$0=t0$5;return parts$0.push(s$0);}else{if(Array.isArray(t0$5)){xs$0$0=t0$5;acc$1=[];temp$2=null;m$2=null;$11:for(m$2 of xs$0$0){let x$1;x$1=m$2;temp$2=acc$0(x$1);acc$1.push(temp$2);}return acc$1;}else{if(getChecker(ENode)(t0$5)){n$0=t0$5;return parts$0.push(collapse$0(n$0));}else{return ___match_error(ph$2$0);}}}});acc$0(children$0);return parts$0.join("");}else{if((typeof(t0$4)==="string")){s$1=t0$4;return s$1;}else{t$1=node$0;console.log(t$1);throw ErrorFactory(["invalid_translation_node"]).create(node$0);}}});makeAnnotatedAST$0=(function makeAnnotatedAST(temp$3$0){let t0$6;let acc$2;let t0$9;let t1$0;let t2$0;let t3$0;let loc$1;let $targ$5;let l$0;let c$0;let src$1;let rval$2;let parts$1;let t$2;let s$3;let tags$1;let props$1;let children$1;let $$521$0;let t0$7;let node$1;let ph$3$0;t0$6=temp$3$0;node$1=t0$6;ph$3$0=t0$6;t0$7=ph$3$0;if((getChecker(ENode)(t0$7)&&(___hasprop(t0$7,"tags")&&((tags$1=t0$7.tags),(___hasprop(t0$7,"props")&&((props$1=t0$7.props),___hasprop(t0$7,"children"))))))){children$1=t0$7.children;parts$1=[];acc$2=(function acc(ph$4$0){let m$3;let acc$3;let temp$4;let n$1;let xs$1$0;let s$2;let $$555$0;let t0$8;t0$8=ph$4$0;if((typeof(t0$8)==="string")){s$2=t0$8;return parts$1.push(s$2);}else{if(Array.isArray(t0$8)){xs$1$0=t0$8;acc$3=[];temp$4=null;m$3=null;$12:for(m$3 of xs$1$0){let x$2;x$2=m$3;temp$4=acc$2(x$2);acc$3.push(temp$4);}return acc$3;}else{if(getChecker(ENode)(t0$8)){n$1=t0$8;return parts$1.push(makeAnnotatedAST$0(n$1));}else{return ___match_error(ph$4$0);}}}});acc$2(children$1);if((props$1.origin&&props$1.origin.location)){loc$1=props$1.origin.location;$targ$5=loc$1.linecol();t0$9=$targ$5;if((Array.isArray(t0$9)&&((t1$0=t0$9.length),((t1$0===2)&&((t2$0=t0$9[0]),(Array.isArray(t2$0)&&((t3$0=t2$0.length),(t3$0===2)))))))){l$0=t2$0[0];c$0=t2$0[1];t0$9[1];}else{___match_error($targ$5);}[l$0,c$0];src$1=loc$1.source.url;rval$2=(new SourceNode$0(l$0,c$0,(src$1||"<unknown>"),parts$1));return rval$2;}else{return parts$1;}}else{if((typeof(t0$7)==="string")){s$3=t0$7;return s$3;}else{t$2=node$1;console.log(t$2);throw ErrorFactory(["invalid_translation_node"]).create(node$1);}}});toCodeAndSourceMap$0=(function toCodeAndSourceMap(node$2,url$0){let ast$2;let obj$0;ast$2=makeAnnotatedAST$0(node$2);if((!getChecker(SourceNode$0)(ast$2))){ast$2=(new SourceNode$0(1,0,null,ast$2));ast$2;}obj$0=ast$2.toStringWithSourceMap(({"file":url$0}));return obj$0;});Generator$0=(function Generator(){let $targ$6;let $targ$7;let $targ$8;let $targ$9;let $targ$10;let $targ$11;let interactive$0;let globvar$1;let t0$10;let m$4$0;let $it$6;if((!getChecker(Generator$0)(this))){$it$6=Object.create(Generator$0.prototype);}else{$it$6=this;}m$4$0=arguments;t0$10=m$4$0.length;if(((t0$10>=0)&&(t0$10<=2))){if((0>=t0$10)){interactive$0=false;}else{interactive$0=m$4$0[0];}if((1>=t0$10)){globvar$1=null;}else{globvar$1=m$4$0[1];}$targ$6=Translator$0(null,globvar$1);($it$6["tr"]=$targ$6);[];$targ$7=std$0.stdenv.fork();($it$6["env"]=$targ$7);[];$targ$8=interactive$0;($it$6["interactive"]=$targ$8);[];$targ$9=null;($it$6["_eval"]=$targ$9);[];$targ$10=Pipeline$0();($it$6["pipeline"]=$targ$10);[];$targ$11=std$0.make_expander($it$6.pipeline);($it$6["expander"]=$targ$11);[];}else{___match_error(m$4$0);}return $it$6;});(Generator$0.prototype["generateInteractive"]=(function generateInteractive(source$2,opts$0){let t0$11;let t1$1;let t2$1;let $targ$12;let args$0;let stmt$0;let body$2;let vars$0;let body$1;let t0$12;let m$5$0;let $$823$0;let m$6$0;let t$3;let p$0;let ex$0;let wrap$0;let result$0;let $it$7;let self$5;$it$7=this;self$5=this;opts$0=__amp__(({"noboil":$it$7.interactive,"to5":true}),opts$0);t$3=tokenize$0(source$2);p$0=parse$0(t$3);if($it$7.interactive){$targ$12=p$0;t0$11=getProjector(Body$0)($targ$12);if((t0$11[0]&&((t1$1=t0$11[1]),(t2$1=t1$1.length),(t2$1>=0)))){args$0=Array.prototype.slice.call(t1$1,0);}else{___match_error($targ$12);}stmt$0=["interactive"].concat(args$0);}else{stmt$0=["multi",p$0];}ex$0=$it$7.expander.expand(["top"],exp$0.topscope,$it$7.env.mark(stmt$0));wrap$0=(function wrap(body$0){return ["send",["variable","spawn"],["array",["lambda",[],body$0,["value",true]]]];});m$5$0=ex$0;if((Array.isArray(m$5$0)&&((t0$12=m$5$0.length),((t0$12===3)&&(m$5$0[0]==="scope"))))){vars$0=m$5$0[1];body$1=m$5$0[2];ex$0=["scope",vars$0,wrap$0(body$1)];}else{body$2=m$5$0;ex$0=wrap$0(body$2);}ex$0=opt$0.hoist(ex$0);result$0=$it$7.tr.translate(ex$0,"stmt");result$0=ENode(["splice"],({}),["\n'use strict';",((m$6$0=opts$0.noboil),((m$6$0?true:false)?"":(opts$0["to5"]?"require('earlgrey-runtime/5');":"require('earlgrey-runtime/6');"))),result$0]);result$0=collapse$0(result$0);if(opts$0["to5"]){result$0=to5$0.transform(result$0,({})).code;result$0;}return result$0;}));(Generator$0.prototype["generate"]=(function generate(source$3,opts$1){let t0$13;let t1$2;let t2$2;let $targ$13;let args$1;let stmt$1;let $$919$0;let m$7$0;let t0$14;let $targ$14;let code$2;let map$0;let newmap$0;let parts$2;let smname$0;let m$8$0;let t$4;let p$1;let ex$1;let result$1;let $it$8;let self$6;$it$8=this;self$6=this;opts$1=__amp__(({"noboil":$it$8.interactive,"to5":true}),opts$1);t$4=tokenize$0(source$3);p$1=parse$0(t$4);if($it$8.interactive){$targ$13=p$1;t0$13=getProjector(Body$0)($targ$13);if((t0$13[0]&&((t1$2=t0$13[1]),(t2$2=t1$2.length),(t2$2>=0)))){args$1=Array.prototype.slice.call(t1$2,0);}else{___match_error($targ$13);}stmt$1=["interactive"].concat(args$1);}else{stmt$1=["multi",p$1];}ex$1=$it$8.expander.expand(["top"],exp$0.topscope,$it$8.env.mark(stmt$1));ex$1=opt$0.hoist(ex$1);result$1=$it$8.tr.translate(ex$1,"stmt");if((!opts$1.noboil)){result$1=ENode(["splice"],({}),["\n'use strict';",((m$7$0=opts$1.noboil),((m$7$0?true:false)?"":(opts$1["to5"]?"require('earlgrey-runtime/5');":"require('earlgrey-runtime/6');"))),$it$8.tr.dump_store(),result$1]);result$1;}if((!opts$1.sourceMap)){result$1=collapse$0(result$1);if(opts$1["to5"]){result$1=to5$0.transform(result$1,({})).code;result$1;}return ({"code":result$1,"map":null});}else{result$1=toCodeAndSourceMap$0(result$1,source$3.url);if(opts$1["to5"]){$targ$14=to5$0.transform(result$1.code,({"sourceMap":true}));t0$14=$targ$14;if((___hasprop(t0$14,"code")&&((code$2=t0$14.code),___hasprop(t0$14,"map")))){map$0=t0$14.map;}else{___match_error($targ$14);}[code$2,map$0];newmap$0=transfer$0(({"fromSourceMap":map$0,"toSourceMap":result$1.map.toString()}));result$1=({"code":code$2,"map":newmap$0});result$1;}m$8$0=opts$1.sourceMap;if((m$8$0==="inline")){return ((((result$1.code+"\n/")+"/# sourceMappingURL=data:application/json;base64,")+(new Buffer(result$1.map.toString()).toString("base64")))+".map\n");}else{parts$2=source$3.url.split("/");smname$0=send(parts$2,(parts$2.length-1)).replace(RegExp(".eg$",""),".js");(result$1["code"]=(result$1.code+((("\n/"+"/# sourceMappingURL=")+smname$0)+".map\n")));return result$1;}}}));(Generator$0.prototype["getEval"]=(function getEval(file$0){let $targ$15;let $it$9;let self$7;$it$9=this;self$7=this;if((!$it$9._eval)){$targ$15=evaluator$0(({"globvar":$it$9.tr.globvar,"global":null,"filename":file$0,"showname":file$0,"cwd":file$0}));($it$9["_eval"]=$targ$15);[];}return $it$9._eval;}));(Generator$0.prototype["evaluate"]=(function evaluate(source$4){let $it$10;let self$8;$it$10=this;self$8=this;return $it$10.getEval(source$4.url)($it$10.generate(source$4,({"noboil":true})).code);}));(Generator$0.prototype["evaluateInteractive"]=(function evaluateInteractive(){let source$5;let opts$2;let t0$15;let m$9$0;let $it$11;let self$9;$it$11=this;self$9=this;m$9$0=arguments;t0$15=m$9$0.length;if(((t0$15>=1)&&(t0$15<=2))){source$5=m$9$0[0];if((1>=t0$15)){opts$2=({});}else{opts$2=m$9$0[1];}return $it$11.getEval(source$5.url)($it$11.generateInteractive(source$5,__amp__(opts$2,({"noboil":true}))));}else{return ___match_error(m$9$0);}}));__amp____colon__(Generator$0,__amp____colon__(((accum$4=({})),(accum$4["::name"]="Generator"),accum$4),((accum$5=({})),(accum$5["::egclass"]=true),accum$5)));$targ$16=evaluator$0;(exports["evaluator"]=$targ$16);[];$targ$17=Source$0;(exports["Source"]=$targ$17);[];$targ$18=Location$0;(exports["Location"]=$targ$18);[];$targ$19=highlight_locations$0;(exports["highlight_locations"]=$targ$19);[];$targ$20=tokenize$0;(exports["tokenize"]=$targ$20);[];$targ$21=parse$0;(exports["parse"]=$targ$21);[];$targ$22=Generator$0;(exports["Generator"]=$targ$22);[];$targ$23=generate$0;(exports["generate"]=$targ$23);[];$targ$24=version$0;(exports["version"]=$targ$24);[];
//# sourceMappingURL=earl-grey.js.map

