//# sourceMappingURL=/home/olivier/git/earl-grey/src/macros/modularity.js.map
'use strict';require('earlgrey-runtime');let $targ$0;let $0$0;let Body$0;$0$0=require("./helpers");Body$0=$0$0.Body;$targ$0=(function(mac$0){let t0$5;let t0$10;let t0$12;let t0$15;let $targ$1;let require_mac$0;let $targ$2;let provide_mac$0;let $targ$3;let inject_mac$0;let $targ$4;let globals_mac$0;let exports$0;exports$0=({});$targ$1=(function(context$0,info$0,form$0,ph$0$0){let req$0;let stmts$0;let topfetch$0;let produce$0;let arg$0;let expr$0;let $$14016$0;let $$14017$0;let t0$0;let t1$0;t0$0=ph$0$0;t1$0=t0$0.length;if(((t1$0===2)&&(t0$0[0]==="data"))){expr$0=t0$0[1];req$0=["variable","require"];stmts$0=[];topfetch$0=(function topfetch(pkg$0,v$0){stmts$0.push(["send",["symbol","="],["data",v$0,["send",req$0,["data",pkg$0]]]]);return v$0;});produce$0=(function produce(temp$0$0,fetch$0){let t0$1;let t0$3;let t0$4;let m$0;let pkgv$0;let pkg$2;let subp$1;let pkg$1;let s$2;let name$0;let subp$0;let s$1;let s$0;let $$14061$0;let $$14062$0;let $$14063$0;let $$14064$0;let $$14065$0;let $$14066$0;let $$14067$0;let $$14068$0;let $$14069$0;let t0$2;let t1$1;let t2$0;let bridge$$14057$0;let t3$0;let t4$0;let t5$0;let t6$0;let t7$0;let expr$1;let ph$1$0;t0$1=temp$0$0;expr$1=t0$1;ph$1$0=t0$1;t0$2=ph$1$0;t1$1=t0$2.length;if((($$14063$0=(t1$1===2))&&(t0$2[0]==="symbol"))){s$0=t0$2[1];return fetch$0(["value",s$0],expr$1);}else{if(($$14063$0&&((t0$2[0]==="value")&&((t2$0=t0$2[1]),(typeof(t2$0)==="string"))))){s$1=t2$0;return fetch$0(expr$1,["symbol",info$0.gensym()]);}else{bridge$$14057$0=ph$1$0;if((((bridge$$14057$0 instanceof Array)&&((t0$3=bridge$$14057$0.length),((t0$3>=1)&&((bridge$$14057$0[0]==="multi")&&((subp$0=Array.prototype.slice.call(bridge$$14057$0,1)),true)))))||((bridge$$14057$0 instanceof Array)&&((t0$4=bridge$$14057$0.length),((t0$4>=1)&&((bridge$$14057$0[0]==="data")&&((subp$0=Array.prototype.slice.call(bridge$$14057$0,1)),true))))))){m$0=null;$1:for(m$0 of subp$0){let p$0;p$0=m$0;produce$0(p$0,fetch$0);}return null;}else{t0$2=ph$1$0;t1$1=t0$2.length;if((($$14063$0=(t1$1===3))&&(($$14064$0=(t0$2[0]==="send"))&&((t2$0=t0$2[1]),(($$14066$0=(t2$0 instanceof Array))&&((t3$0=t2$0.length),(($$14068$0=(t3$0===2))&&(($$14069$0=(t2$0[0]==="symbol"))&&((t2$0[1]==="^")&&((t4$0=t0$2[2]),((t4$0 instanceof Array)&&((t5$0=t4$0.length),((t5$0===3)&&((t4$0[0]==="data")&&((t6$0=t4$0[1]),((t6$0 instanceof Array)&&((t7$0=t6$0.length),((t7$0===1)&&(t6$0[0]==="void"))))))))))))))))))){name$0=t4$0[2];return fetch$0(name$0,["symbol",info$0.gensym()]);}else{if(($$14069$0&&((t2$0[1]==="as")&&((t4$0=t0$2[2]),((t4$0 instanceof Array)&&((t5$0=t4$0.length),((t5$0===3)&&(t4$0[0]==="data")))))))){pkg$1=t4$0[1];s$2=t4$0[2];return produce$0(pkg$1,(function(the_pkg$0,temp$1$0){return fetch$0(the_pkg$0,s$2);}));}else{if(($$14069$0&&((t2$0[1]==="->")&&((t4$0=t0$2[2]),((t4$0 instanceof Array)&&((t5$0=t4$0.length),((t5$0===3)&&(t4$0[0]==="data")))))))){pkg$2=t4$0[1];subp$1=t4$0[2];pkgv$0=produce$0(pkg$2,fetch$0);return produce$0(subp$1,(function(pkg$3,v$1){stmts$0.push(["send",["symbol","="],["data",v$1,["send",pkgv$0,pkg$3]]]);return v$1;}));}else{return ___match_error(ph$1$0);}}}}}}});produce$0(expr$0,topfetch$0);return ["splice"].concat(stmts$0);}else{if(((t1$0===1)&&(t0$0[0]==="void"))){return ["variable","require"];}else{arg$0=ph$0$0;return ["send",["variable","require"],arg$0];}}});t0$5=getProjector(mac$0("require"))($targ$1);if(t0$5[0]){require_mac$0=t0$5[1];}else{___match_error($targ$1);}$targ$2=(function(context$1,temp$2$0,form$1,temp$3$0){let t0$6;let t1$2;let t2$1;let t3$1;let t4$1;let m$1;let acc$0;let temp$4;let exp$0;let expr$2;t0$6=temp$3$0;if(((t0$6 instanceof Array)&&((t1$2=t0$6.length),((t1$2===2)&&((t0$6[0]==="data")&&((t2$1=getProjector(Body$0)(t0$6[1])),(t2$1[0]&&((t3$1=t2$1[1]),(t4$1=t3$1.length),(t4$1>=0))))))))){expr$2=Array.prototype.slice.call(t3$1,0);}else{___match_error(temp$3$0);}exp$0=form$1.env.mark(["symbol","exports"]);return ["sink",["multi"].concat(((acc$0=[]),(temp$4=null),(m$1=null),(function(){$2:for(m$1 of expr$2){let t0$8;let t0$9;let other$0;let s$4;let name$2;let s$3;let name$1;let $$14274$0;let t0$7;let t1$3;let t2$2;let t3$2;let t4$2;let t5$1;let bridge$$14272$0;t0$7=m$1;s$3=t0$7;if(((t0$7 instanceof Array)&&((t1$3=t0$7.length),((t1$3===2)&&(t0$7[0]==="symbol"))))){name$1=t0$7[1];temp$4=["send",["symbol","="],["data",["send",exp$0,["value",name$1]],s$3]];acc$0.push(temp$4);}else{if(((t0$7 instanceof Array)&&((t1$3=t0$7.length),((t1$3===3)&&((t0$7[0]==="send")&&((t2$2=t0$7[1]),((t2$2 instanceof Array)&&((t3$2=t2$2.length),((t3$2===2)&&((t2$2[0]==="symbol")&&((t2$2[1]==="as")&&((t4$2=t0$7[2]),((t4$2 instanceof Array)&&((t5$1=t4$2.length),((t5$1===3)&&((t4$2[0]==="data")&&((s$4=t4$2[1]),(bridge$$14272$0=t4$2[2]),(((bridge$$14272$0 instanceof Array)&&((t0$8=bridge$$14272$0.length),((t0$8===2)&&((bridge$$14272$0[0]==="symbol")&&((name$2=bridge$$14272$0[1]),true)))))||((bridge$$14272$0 instanceof Array)&&((t0$9=bridge$$14272$0.length),((t0$9===2)&&((bridge$$14272$0[0]==="value")&&((name$2=bridge$$14272$0[1]),true))))))))))))))))))))))){temp$4=["send",["symbol","="],["data",["send",exp$0,["value",name$2]],s$4]];acc$0.push(temp$4);}else{other$0=m$1;throw ErrorFactory(["syntax","provide"]).create("Each clause of provide must be 'sym' or 'sym as name'");acc$0.push(temp$4);}}}})(),acc$0))];});t0$10=getProjector(mac$0("provide"))($targ$2);if(t0$10[0]){provide_mac$0=t0$10[1];}else{___match_error($targ$2);}$targ$3=(function(context$2,temp$5$0,form$2,temp$6$0){let t0$11;let t1$4;let t2$3;let t3$3;let t4$3;let expr$3;t0$11=temp$6$0;if(((t0$11 instanceof Array)&&((t1$4=t0$11.length),((t1$4===2)&&((t0$11[0]==="data")&&((t2$3=getProjector(Body$0)(t0$11[1])),(t2$3[0]&&((t3$3=t2$3[1]),(t4$3=t3$3.length),(t4$3>=0))))))))){expr$3=Array.prototype.slice.call(t3$3,0);}else{___match_error(temp$6$0);}return ["restmacro",(function(stmts$1){let exp$1;exp$1=form$2.env.mark(["symbol","exports"]);return [["multi",["send",["symbol","globals"],["data",["symbol","module"]]],["send",["symbol","="],["data",["send",["send",["symbol","module"],["send",["symbol","."],["data",["void"],["symbol","exports"]]]],["data"].concat(expr$3)],["multi",["send",["symbol","="],["data",["send",["symbol","var"],exp$1],["data",["symbol","="]]]],["multi"].concat(stmts$1),exp$1]]]]];})];});t0$12=getProjector(mac$0("inject"))($targ$3);if(t0$12[0]){inject_mac$0=t0$12[1];}else{___match_error($targ$3);}$targ$4=(function(context$3,temp$7$0,form$3,temp$8$0){let t0$13;let t1$5;let t2$4;let t3$4;let t4$4;let m$2;let acc$1;let temp$9;let vars$0;t0$13=temp$8$0;if(((t0$13 instanceof Array)&&((t1$5=t0$13.length),((t1$5===2)&&((t0$13[0]==="data")&&((t2$4=getProjector(Body$0)(t0$13[1])),(t2$4[0]&&((t3$4=t2$4[1]),(t4$4=t3$4.length),(t4$4>=0))))))))){vars$0=Array.prototype.slice.call(t3$4,0);}else{___match_error(temp$8$0);}return ["splice"].concat(((acc$1=[]),(temp$9=null),(m$2=null),(function(){$3:for(m$2 of vars$0){let variable$0;let s$5;let t0$14;let t1$6;t0$14=m$2;variable$0=t0$14;if(((t0$14 instanceof Array)&&((t1$6=t0$14.length),((t1$6===2)&&(t0$14[0]==="symbol"))))){s$5=t0$14[1];temp$9=["declare_raw",variable$0,["variable",s$5]];acc$1.push(temp$9);}else{___match_error(m$2,"/home/olivier/git/earl-grey/src/macros/modularity.eg",2067,2141);}}})(),acc$1));});t0$15=getProjector(mac$0("globals"))($targ$4);if(t0$15[0]){globals_mac$0=t0$15[1];}else{___match_error($targ$4);}return exports$0;});(module["exports"]=$targ$0);[];
