
'use strict';require('earlgrey-runtime');let $targ$0;let $0$0;let Source$0;let $1$0;let qq$0;$0$0=require("../location");Source$0=$0$0.Source;$1$0=require("./helpers");qq$0=$1$0.qq;$targ$0=(function(mac$0){let t0$1;let t0$5;let $targ$1;let quote_mac$0;let $targ$2;let quaint_mac$0;let exports$0;exports$0=({});$targ$1=(function(context$0,info$0,form$0,temp$0$0){let t0$0;let t1$0;let expr$1;let expr$0;let s$0;t0$0=temp$0$0;expr$0=t0$0;if(((t0$0 instanceof Array)&&((t1$0=t0$0.length),((t1$0===2)&&(t0$0[0]==="value"))))){s$0=t0$0[1];}else{___match_error(temp$0$0);}expr$1=info$0.go(Source$0(s$0,"<quasiquote>"),"source","parse");return info$0.mark(qq$0(expr$1));});t0$1=getProjector(mac$0("`"))($targ$1);if(t0$1[0]){quote_mac$0=t0$1[1];}else{___match_error($targ$1);}$targ$2=(function(context$1,info$1,form$1,temp$1$0){let t0$2;let t1$1;let accum$0;let accum$1;let evaluator$0;let quaint$0;let q$0;let transform$0;let expr$2;let s$1;t0$2=temp$1$0;expr$2=t0$2;if(((t0$2 instanceof Array)&&((t1$1=t0$2.length),((t1$1===2)&&(t0$2[0]==="value"))))){s$1=t0$2[1];}else{___match_error(temp$1$0);}quaint$0=null;evaluator$0=__amp____colon__(((accum$0=({})),(accum$0["eval"]=(function(src$0){return this.mark(this.go(src$0.makeSource(),"source","parse"));})),accum$0),((accum$1=({})),(accum$1["setenv"]=(function setenv(name$0,value$0){return undefined;})),accum$1));q$0=quaint$0.create(evaluator$0);transform$0=(function transform(temp$2$0){let t0$3;let m$0;let acc$0;let temp$3;let m$1;let acc$1;let temp$4;let wtags$0;let wchildren$0;let tags$0;let props$0;let children$0;let bridge$$15173$0;let t0$4;let node$0;let ph$0$0;t0$3=temp$2$0;node$0=t0$3;ph$0$0=t0$3;bridge$$15173$0=ph$0$0;if(((typeof(bridge$$15173$0)==="string")||(typeof(bridge$$15173$0)==="number"))){return ["value",node$0];}else{t0$4=ph$0$0;if((getChecker(Node)(t0$4)&&(___hasprop(t0$4,"tags")&&((tags$0=t0$4.tags),(___hasprop(t0$4,"props")&&((props$0=t0$4.props),___hasprop(t0$4,"children"))))))){children$0=t0$4.children;acc$0=[];temp$3=null;m$0=null;$2:for(m$0 of tags$0){let tag$0;tag$0=m$0;temp$3=["value",tag$0];acc$0.push(temp$3);}wtags$0=acc$0;acc$1=[];temp$4=null;m$1=null;$3:for(m$1 of children$0){let child$0;child$0=m$1;temp$4=transform$0(child$0);acc$1.push(temp$4);}wchildren$0=acc$1;return ["send",["symbol","Node"],["data",["data"].concat(wtags$0),["data",["symbol","="]],["data"].concat(wchildren$0)]];}else{return node$0;}}});return transform$0(q$0.run(s$1));});t0$5=getProjector(mac$0("'"))($targ$2);if(t0$5[0]){quaint_mac$0=t0$5[1];}else{___match_error($targ$2);}return exports$0;});(module["exports"]=$targ$0);[];
